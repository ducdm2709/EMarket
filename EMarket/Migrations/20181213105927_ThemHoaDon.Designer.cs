// <auto-generated />
using System;
using EMarket.Areas.Admin.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EMarket.Migrations
{
    [DbContext(typeof(EMarketContext))]
    [Migration("20181213105927_ThemHoaDon")]
    partial class ThemHoaDon
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EMarket.Areas.Admin.Models.HangHoa", b =>
                {
                    b.Property<int>("HangHoaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("HangHoaID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Gia");

                    b.Property<string>("Hinh")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int>("LoaiId")
                        .HasColumnName("LoaiID");

                    b.Property<string>("MoTa");

                    b.Property<int>("NhaCungCapId")
                        .HasColumnName("NhaCungCapID");

                    b.Property<string>("TenHangHoa")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.HasKey("HangHoaId");

                    b.HasIndex("LoaiId");

                    b.HasIndex("NhaCungCapId");

                    b.ToTable("HangHoa");
                });

            modelBuilder.Entity("EMarket.Areas.Admin.Models.HoaDon", b =>
                {
                    b.Property<int>("HoaDonId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DiaChi")
                        .IsRequired();

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<DateTime>("NgayLapHoaDon");

                    b.Property<string>("SDT")
                        .IsRequired();

                    b.Property<string>("TenKhachHang")
                        .IsRequired();

                    b.Property<bool>("TinhTrang");

                    b.Property<double>("TongTien");

                    b.HasKey("HoaDonId");

                    b.ToTable("HoaDon");
                });

            modelBuilder.Entity("EMarket.Areas.Admin.Models.KhoHang", b =>
                {
                    b.Property<int>("KhoHangID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("HangHoaID");

                    b.Property<int>("SoLuong");

                    b.HasKey("KhoHangID");

                    b.HasIndex("HangHoaID");

                    b.ToTable("KhoHang");
                });

            modelBuilder.Entity("EMarket.Areas.Admin.Models.Loai", b =>
                {
                    b.Property<int>("LoaiId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("LoaiID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MoTa");

                    b.Property<string>("TenLoai")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("LoaiId");

                    b.ToTable("Loai");
                });

            modelBuilder.Entity("EMarket.Areas.Admin.Models.NhaCungCap", b =>
                {
                    b.Property<int>("NhaCungCapId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("NhaCungCapID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MoTa")
                        .HasMaxLength(200);

                    b.Property<string>("TenNhaCungCap")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.HasKey("NhaCungCapId");

                    b.ToTable("NhaCungCap");
                });

            modelBuilder.Entity("EMarket.Areas.Admin.Models.TaiKhoan", b =>
                {
                    b.Property<int>("TaiKhoanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("TaiKhoanID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<bool>("LoaiTaiKhoan");

                    b.Property<DateTime>("NgayDk")
                        .HasColumnName("NgayDK")
                        .HasColumnType("datetime");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("TaiKhoanId");

                    b.ToTable("TaiKhoan");
                });

            modelBuilder.Entity("EMarket.Areas.Admin.Models.ThongTinTaiKhoan", b =>
                {
                    b.Property<int>("ThongTinTaiKhoanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ThongTinTaiKhoanID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("HoVaTen")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<DateTime?>("NgaySinh")
                        .IsRequired()
                        .HasColumnType("datetime");

                    b.Property<string>("Sdt")
                        .IsRequired()
                        .HasColumnName("SDT")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<int>("TaiKhoanId")
                        .HasColumnName("TaiKhoanId");

                    b.HasKey("ThongTinTaiKhoanId");

                    b.HasIndex("TaiKhoanId");

                    b.ToTable("ThongTinTaiKhoan");
                });

            modelBuilder.Entity("EMarket.Areas.Admin.Models.TopSelling", b =>
                {
                    b.Property<int>("TopSellingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("TopSellingID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DanhGia");

                    b.Property<int>("HangHoaId")
                        .HasColumnName("HangHoaID");

                    b.Property<int>("SoLan");

                    b.HasKey("TopSellingId");

                    b.HasIndex("HangHoaId");

                    b.ToTable("TopSelling");
                });

            modelBuilder.Entity("EMarket.Areas.Admin.Models.HangHoa", b =>
                {
                    b.HasOne("EMarket.Areas.Admin.Models.Loai", "Loai")
                        .WithMany("HangHoa")
                        .HasForeignKey("LoaiId")
                        .HasConstraintName("FK_HangHoa_LoaiID");

                    b.HasOne("EMarket.Areas.Admin.Models.NhaCungCap", "NhaCungCap")
                        .WithMany("HangHoa")
                        .HasForeignKey("NhaCungCapId")
                        .HasConstraintName("FK_HangHoa_NhaCungCap");
                });

            modelBuilder.Entity("EMarket.Areas.Admin.Models.KhoHang", b =>
                {
                    b.HasOne("EMarket.Areas.Admin.Models.HangHoa")
                        .WithMany("KhoHang")
                        .HasForeignKey("HangHoaID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EMarket.Areas.Admin.Models.ThongTinTaiKhoan", b =>
                {
                    b.HasOne("EMarket.Areas.Admin.Models.TaiKhoan", "TaiKhoan")
                        .WithMany("ThongTinTaiKhoan")
                        .HasForeignKey("TaiKhoanId")
                        .HasConstraintName("FK_ThongTinTaiKhoan_TaiKhoan");
                });

            modelBuilder.Entity("EMarket.Areas.Admin.Models.TopSelling", b =>
                {
                    b.HasOne("EMarket.Areas.Admin.Models.HangHoa", "HangHoa")
                        .WithMany("TopSelling")
                        .HasForeignKey("HangHoaId")
                        .HasConstraintName("FK_TopSelling_HangHoa");
                });
#pragma warning restore 612, 618
        }
    }
}
